name: Publish

on:
  release:
    types: [created]

jobs:
  win_mac:
    name: publish (${{ matrix.os }}, ${{ matrix.python-version }})

    runs-on: ${{ matrix.os }}

    strategy:
      max-parallel: 4
      matrix:
        os: [windows-latest, macOS-latest]
        python-version: [3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v1
    
    - name: Install libomp
      run: |
        brew install libomp
      if: matrix.os == 'macos-latest'

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
        pip install -r requirements.txt

    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        pumpit --tag "${{ github.ref }}" --file setup.py --replace "EQLIB_VERSION = 'dev'" "EQLIB_VERSION = '%VERSION%'"
        python setup.py bdist_wheel
        twine upload dist/*.whl
  
  linux:
    name: publish (ubuntu-latest, ${{ matrix.python-version }})

    runs-on: ubuntu-latest

    container:
      image: oberbichler/manylinux2010_x86_64
      env:
        PLAT: manylinux2010_x86_64

    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v1
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        PYTHON_VERSION: ${{ matrix.python-version }}
      run: |
        if [ "${PYTHON_VERSION}" == "3.7" ]; then PYBIN=/opt/python/cp37-cp37m/bin; fi
        if [ "${PYTHON_VERSION}" == "3.8" ]; then PYBIN=/opt/python/cp38-cp38/bin; fi
        if [ "${PYTHON_VERSION}" == "3.9" ]; then PYBIN=/opt/python/cp39-cp39/bin; fi
        PATH=${PYBIN}:$PATH
        pip install --upgrade pip
        pip install -r requirements.txt
        pumpit --tag "${{ github.ref }}" --file setup.py --replace "EQLIB_VERSION = 'dev'" "EQLIB_VERSION = '%VERSION%'"
        pip wheel . -w wheelhouse/
        for whl in wheelhouse/eqlib-*.whl; do
          auditwheel repair "$whl" --plat $PLAT -w wheelhouse/
        done
        for whl in wheelhouse/eqlib-*-${PLAT}.whl; do
          twine upload "$whl"
        done
  
  source:
    name: publish (source)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
        pip install -r requirements.txt
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        pumpit --tag "${{ github.ref }}" --file setup.py --replace "EQLIB_VERSION = 'dev'" "EQLIB_VERSION = '%VERSION%'"
        python setup.py sdist
        twine upload dist/*
